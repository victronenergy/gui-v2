/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c VBusItemProxy -p v_busitem_proxy.h:v_busitem_proxy.cpp com.victron.busitem.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef V_BUSITEM_PROXY_H_1440011482
#define V_BUSITEM_PROXY_H_1440011482

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.victronenergy.BusItem
 */
class VBusItemProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.victronenergy.BusItem"; }

public:
    VBusItemProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~VBusItemProxy();

    Q_PROPERTY(QString Text READ text)
    inline QString text() const
    { return qvariant_cast< QString >(property("Text")); }

    Q_PROPERTY(QDBusVariant Value READ value WRITE setValue)
    inline QDBusVariant value() const
    { return qvariant_cast< QDBusVariant >(property("Value")); }
    inline void setValue(const QDBusVariant &value)
    { setProperty("Value", QVariant::fromValue(value)); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusVariant> GetDefault()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetDefault"), argumentList);
    }

    inline QDBusPendingReply<QDBusVariant> GetMax()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetMax"), argumentList);
    }

    inline QDBusPendingReply<QDBusVariant> GetMin()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetMin"), argumentList);
    }

    inline QDBusPendingReply<QString> GetText()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetText"), argumentList);
    }

    inline QDBusPendingReply<QDBusVariant> GetValue()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetValue"), argumentList);
    }

    inline QDBusPendingReply<int> SetDefault()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("SetDefault"), argumentList);
    }

    inline QDBusPendingReply<int> SetValue(const QDBusVariant &value)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(value);
        return asyncCallWithArgumentList(QLatin1String("SetValue"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void PropertiesChanged(const QVariantMap &changes);
};

namespace com {
  namespace victronenergy {
    typedef ::VBusItemProxy BusItem;
  }
}
#endif
