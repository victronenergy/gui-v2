
/*
** Copyright (C) 2023 Victron Energy B.V.
** See LICENSE.txt for license information.
*/

// THIS FILE IS AUTOMATICALLY GENERATED!
// DO NOT EDIT IT MANUALLY!
// YOU NEED TO RUN themeparser IF ANY OF
// THE THEME .json FILES CHANGE!

// TO CONVERT TO FLAT MODE, RUN THE FOLLOWING 12x ON EVERY QML+JS FILE:
// sed -E 's/Theme\.([0-9a-zA-Z.]+)\.([0-9a-zA-Z]+)/Theme.\1_\2/'
// TO CONVERT TO NESTED MODE, RUN THE FOLLOWING 12x ON EVERY QML+JS FILE:
// sed -E 's/Theme\.([0-9a-zA-Z]+)[_]([0-9a-zA-Z.]+)/Theme.\1.\2/'
//
// e.g. where theme_flat.sh is:
//   for i in \`seq 1 12\`
//   do
//       sed -E 's/Theme\.([0-9a-zA-Z.]+)\.([0-9a-zA-Z]+)/Theme.\1_\2/' -i $1
//   done
// simply invoke:
//   find . -name "*qml" -o -name "*js" | xargs -L1 theme_flat.sh
//
// e.g. where theme_nested.sh is:
//   for i in \`seq 1 12\`
//   do
//       sed -E 's/Theme\.([0-9a-zA-Z]+)[_]([0-9a-zA-Z.]+)/Theme.\1.\2/' -i $1
//   done
// simply invoke:
//   find . -name "*qml" -o -name "*js" | xargs -L1 theme_nested.sh

#ifndef VICTRON_VENUSOS_GUI_V2_THEMEOBJECTS_H
#define VICTRON_VENUSOS_GUI_V2_THEMEOBJECTS_H

#include <QObject>
#include <QColor>
#include <QFont>
#include <QVariant>
#include <QVariantMap>

#include "theme.h"

namespace Victron {
namespace VenusOS {


class ThemeSingleton : public Theme
{
	Q_OBJECT
	QML_NAMED_ELEMENT(Theme)
	QML_SINGLETON

	// property declarations
	Q_PROPERTY(int font_briefPage_battery_percentage_pixelSize READ font_briefPage_battery_percentage_pixelSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_briefPage_battery_timeToGo_pixelSize READ font_briefPage_battery_timeToGo_pixelSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_briefPage_battery_voltage_pixelSize READ font_briefPage_battery_voltage_pixelSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_briefPage_quantityLabel_size READ font_briefPage_quantityLabel_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_briefPage_sidePanel_forecastRow_today_date_size READ font_briefPage_sidePanel_forecastRow_today_date_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_briefPage_sidePanel_forecastRow_today_temperature_size READ font_briefPage_sidePanel_forecastRow_today_temperature_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_overviewPage_battery_timeToGo_pixelSize READ font_overviewPage_battery_timeToGo_pixelSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_overviewPage_widget_quantityLabel_maximumSize READ font_overviewPage_widget_quantityLabel_maximumSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_overviewPage_widget_quantityLabel_minimumSize READ font_overviewPage_widget_quantityLabel_minimumSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_body1 READ font_size_body1 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_body2 READ font_size_body2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_body3 READ font_size_body3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_caption READ font_size_caption NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_gsm_icon_caption READ font_size_gsm_icon_caption NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_h1 READ font_size_h1 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_h2 READ font_size_h2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_h3 READ font_size_h3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_h4 READ font_size_h4 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_size_h5 READ font_size_h5 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int font_splashView_progressText_size READ font_splashView_progressText_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_arc_strokeWidth READ geometry_arc_strokeWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_batteryListPage_item_height READ geometry_batteryListPage_item_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_batteryListPage_item_verticalSpacing READ geometry_batteryListPage_item_verticalSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_centerGauge_centerTextSpacing READ geometry_briefPage_centerGauge_centerTextSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_centerGauge_centerText_horizontalSpacing READ geometry_briefPage_centerGauge_centerText_horizontalSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_centerGauge_centerText_topMargin READ geometry_briefPage_centerGauge_centerText_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_centerGauge_centerText_topPadding READ geometry_briefPage_centerGauge_centerText_topPadding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_centerGauge_icon_height READ geometry_briefPage_centerGauge_icon_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_centerGauge_maximumGaugeCount READ geometry_briefPage_centerGauge_maximumGaugeCount NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_briefPage_centerGauge_shine_highlightPosition READ geometry_briefPage_centerGauge_shine_highlightPosition NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_briefPage_centerGauge_shine_widthRatio READ geometry_briefPage_centerGauge_shine_widthRatio NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_horizontalMargin READ geometry_briefPage_edgeGauge_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_initialize_margin READ geometry_briefPage_edgeGauge_initialize_margin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_label_initialize_margin READ geometry_briefPage_edgeGauge_label_initialize_margin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_quantityLabel_spacing READ geometry_briefPage_edgeGauge_quantityLabel_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_radius READ geometry_briefPage_edgeGauge_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_topMargin READ geometry_briefPage_edgeGauge_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_edgeGauge_width READ geometry_briefPage_edgeGauge_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_largeEdgeGauge_height READ geometry_briefPage_largeEdgeGauge_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_largeEdgeGauge_maxAngle READ geometry_briefPage_largeEdgeGauge_maxAngle NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_lowerGauge_topMargin READ geometry_briefPage_lowerGauge_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_columnSpacing READ geometry_briefPage_sidePanel_columnSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_forecastRow_spacing READ geometry_briefPage_sidePanel_forecastRow_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_generator_columnSpacing READ geometry_briefPage_sidePanel_generator_columnSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_generator_slider_height READ geometry_briefPage_sidePanel_generator_slider_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_header_spacing READ geometry_briefPage_sidePanel_header_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_loadGraph_dotSize READ geometry_briefPage_sidePanel_loadGraph_dotSize NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_loadGraph_height READ geometry_briefPage_sidePanel_loadGraph_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_loadGraph_horizontalGradient_width READ geometry_briefPage_sidePanel_loadGraph_horizontalGradient_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_loadGraph_intervalMs READ geometry_briefPage_sidePanel_loadGraph_intervalMs NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_briefPage_sidePanel_loadGraph_warningThreshold READ geometry_briefPage_sidePanel_loadGraph_warningThreshold NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_loadGraph_width READ geometry_briefPage_sidePanel_loadGraph_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_loads_columnSpacing READ geometry_briefPage_sidePanel_loads_columnSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_separatorBar_height READ geometry_briefPage_sidePanel_separatorBar_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_solarYield_width READ geometry_briefPage_sidePanel_solarYield_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_verticalCenterOffset READ geometry_briefPage_sidePanel_verticalCenterOffset NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_sidePanel_width READ geometry_briefPage_sidePanel_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_smallEdgeGauge_height READ geometry_briefPage_smallEdgeGauge_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_smallEdgeGauge_maxAngle READ geometry_briefPage_smallEdgeGauge_maxAngle NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_briefPage_solarHistoryGauge_maximumGaugeCount READ geometry_briefPage_solarHistoryGauge_maximumGaugeCount NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_button_border_width READ geometry_button_border_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_button_radius READ geometry_button_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_button_spacing READ geometry_button_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_circularMultiGauge_icons_maxWidth READ geometry_circularMultiGauge_icons_maxWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_circularMultiGauge_labels_rightMargin READ geometry_circularMultiGauge_labels_rightMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_circularMultiGauge_row_spacing READ geometry_circularMultiGauge_row_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_circularMultiGauge_spacing READ geometry_circularMultiGauge_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_circularMultiGauge_strokeWidth READ geometry_circularMultiGauge_strokeWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_circularSingularGauge_strokeWidth READ geometry_circularSingularGauge_strokeWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_height READ geometry_comboBox_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_indicator_height READ geometry_comboBox_indicator_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_leftPadding READ geometry_comboBox_leftPadding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_rightPadding READ geometry_comboBox_rightPadding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_spacing READ geometry_comboBox_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_verticalPadding READ geometry_comboBox_verticalPadding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_comboBox_width READ geometry_comboBox_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_button_margins READ geometry_controlCard_button_margins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_contentMargins READ geometry_controlCard_contentMargins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_itemSeparator_margins READ geometry_controlCard_itemSeparator_margins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_largeItem_height READ geometry_controlCard_largeItem_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_maximumWidth READ geometry_controlCard_maximumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_mediumItem_height READ geometry_controlCard_mediumItem_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_minimumWidth READ geometry_controlCard_minimumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_status_bottomMargin READ geometry_controlCard_status_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_status_topMargin READ geometry_controlCard_status_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_title_spacing READ geometry_controlCard_title_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCard_title_topMargin READ geometry_controlCard_title_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCardsPage_bottomMargin READ geometry_controlCardsPage_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCardsPage_horizontalMargin READ geometry_controlCardsPage_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_controlCardsPage_spacing READ geometry_controlCardsPage_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_generatorCard_startButton_height READ geometry_generatorCard_startButton_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_generatorIconLabel_duration_width READ geometry_generatorIconLabel_duration_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_generatorIconLabel_icon_margin READ geometry_generatorIconLabel_icon_margin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_generatorIconLabel_icon_width READ geometry_generatorIconLabel_icon_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_gradientList_bottomMargin READ geometry_gradientList_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_gradientList_spacing READ geometry_gradientList_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_gradientList_topMargin READ geometry_gradientList_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_border_width READ geometry_levelsPage_environment_gaugePanel_border_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_compact_height READ geometry_levelsPage_environment_gaugePanel_compact_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_expanded_height READ geometry_levelsPage_environment_gaugePanel_expanded_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_innerRadius READ geometry_levelsPage_environment_gaugePanel_innerRadius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_oneGauge_compact_width READ geometry_levelsPage_environment_gaugePanel_oneGauge_compact_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_oneGauge_expanded_width READ geometry_levelsPage_environment_gaugePanel_oneGauge_expanded_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_radius READ geometry_levelsPage_environment_gaugePanel_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_title_height READ geometry_levelsPage_environment_gaugePanel_title_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_twoGauge_compact_width READ geometry_levelsPage_environment_gaugePanel_twoGauge_compact_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gaugePanel_twoGauge_expanded_width READ geometry_levelsPage_environment_gaugePanel_twoGauge_expanded_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_bar_bottomMargin READ geometry_levelsPage_environment_gauge_bar_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_bar_padding READ geometry_levelsPage_environment_gauge_bar_padding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_bar_radius READ geometry_levelsPage_environment_gauge_bar_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_bar_topMargin READ geometry_levelsPage_environment_gauge_bar_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_bar_width READ geometry_levelsPage_environment_gauge_bar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_icon_size READ geometry_levelsPage_environment_gauge_icon_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_icon_topMargin READ geometry_levelsPage_environment_gauge_icon_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_quantityLabel_height READ geometry_levelsPage_environment_gauge_quantityLabel_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_separator_horizontalMargin READ geometry_levelsPage_environment_gauge_separator_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_tick_margin READ geometry_levelsPage_environment_gauge_tick_margin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_tick_size READ geometry_levelsPage_environment_gauge_tick_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_tick_step READ geometry_levelsPage_environment_gauge_tick_step NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_typeLabel_topMargin READ geometry_levelsPage_environment_gauge_typeLabel_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_valueMarker_background_height READ geometry_levelsPage_environment_gauge_valueMarker_background_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_valueMarker_height READ geometry_levelsPage_environment_gauge_valueMarker_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_valueMarker_width READ geometry_levelsPage_environment_gauge_valueMarker_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_gauge_width READ geometry_levelsPage_environment_gauge_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_levelsPage_environment_humidityGauge_gradient_position1 READ geometry_levelsPage_environment_humidityGauge_gradient_position1 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_levelsPage_environment_humidityGauge_gradient_position2 READ geometry_levelsPage_environment_humidityGauge_gradient_position2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_levelsPage_environment_humidityGauge_gradient_position3 READ geometry_levelsPage_environment_humidityGauge_gradient_position3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_humidityGauge_highlightedValue READ geometry_levelsPage_environment_humidityGauge_highlightedValue NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_humidityGauge_maximumValue READ geometry_levelsPage_environment_humidityGauge_maximumValue NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_humidityGauge_minimumValue READ geometry_levelsPage_environment_humidityGauge_minimumValue NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_maximumSpacing READ geometry_levelsPage_environment_maximumSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_minimumHorizontalMargin READ geometry_levelsPage_environment_minimumHorizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_minimumSpacing READ geometry_levelsPage_environment_minimumSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_temperatureGauge_gradient_position1 READ geometry_levelsPage_environment_temperatureGauge_gradient_position1 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_levelsPage_environment_temperatureGauge_gradient_position2 READ geometry_levelsPage_environment_temperatureGauge_gradient_position2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_temperatureGauge_gradient_position3 READ geometry_levelsPage_environment_temperatureGauge_gradient_position3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_temperatureGauge_highlightedValue READ geometry_levelsPage_environment_temperatureGauge_highlightedValue NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_temperatureGauge_maximumValue READ geometry_levelsPage_environment_temperatureGauge_maximumValue NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_environment_temperatureGauge_minimumValue READ geometry_levelsPage_environment_temperatureGauge_minimumValue NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugeDelegate_compact_height READ geometry_levelsPage_gaugeDelegate_compact_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugeDelegate_contentWidth READ geometry_levelsPage_gaugeDelegate_contentWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugeDelegate_expanded_height READ geometry_levelsPage_gaugeDelegate_expanded_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugeDelegate_width READ geometry_levelsPage_gaugeDelegate_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_border_width READ geometry_levelsPage_gauge_border_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_icon_height READ geometry_levelsPage_gauge_icon_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_icon_topMargin READ geometry_levelsPage_gauge_icon_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_label_topMargin READ geometry_levelsPage_gauge_label_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_radius READ geometry_levelsPage_gauge_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_spacing2 READ geometry_levelsPage_gauge_spacing2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_spacing3 READ geometry_levelsPage_gauge_spacing3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_spacing4 READ geometry_levelsPage_gauge_spacing4 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_spacing5 READ geometry_levelsPage_gauge_spacing5 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_spacing6 READ geometry_levelsPage_gauge_spacing6 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_spacing7 READ geometry_levelsPage_gauge_spacing7 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_valueText_bottomMargin READ geometry_levelsPage_gauge_valueText_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gauge_valueText_topMargin READ geometry_levelsPage_gauge_valueText_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugesView_compact_bottomMargin READ geometry_levelsPage_gaugesView_compact_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugesView_compact_topMargin READ geometry_levelsPage_gaugesView_compact_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugesView_expanded_bottomMargin READ geometry_levelsPage_gaugesView_expanded_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugesView_expanded_topMargin READ geometry_levelsPage_gaugesView_expanded_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_gaugesView_horizontalMargin READ geometry_levelsPage_gaugesView_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_groupedSubgauges_delegate_height READ geometry_levelsPage_groupedSubgauges_delegate_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_groupedSubgauges_delegate_width READ geometry_levelsPage_groupedSubgauges_delegate_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauge_width1 READ geometry_levelsPage_subgauge_width1 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauge_width2 READ geometry_levelsPage_subgauge_width2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauge_width3 READ geometry_levelsPage_subgauge_width3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauge_width4 READ geometry_levelsPage_subgauge_width4 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauges_bottomMargin READ geometry_levelsPage_subgauges_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauges_horizontalMargin READ geometry_levelsPage_subgauges_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauges_spacing READ geometry_levelsPage_subgauges_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_subgauges_topMargin READ geometry_levelsPage_subgauges_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankGauge_alarmIcon_height READ geometry_levelsPage_tankGauge_alarmIcon_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankGauge_radius READ geometry_levelsPage_tankGauge_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankGroupData_height READ geometry_levelsPage_tankGroupData_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankGroupData_horizontalMargin READ geometry_levelsPage_tankGroupData_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankGroupData_spacing2 READ geometry_levelsPage_tankGroupData_spacing2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankGroupData_spacing3 READ geometry_levelsPage_tankGroupData_spacing3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_levelsPage_tankMergeThreshold READ geometry_levelsPage_tankMergeThreshold NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItemButton_height READ geometry_listItemButton_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItemButton_horizontalPadding READ geometry_listItemButton_horizontalPadding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItemButton_maximumWidth READ geometry_listItemButton_maximumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_content_horizontalMargin READ geometry_listItem_content_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_content_spacing READ geometry_listItem_content_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_content_verticalMargin READ geometry_listItem_content_verticalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_height READ geometry_listItem_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_radius READ geometry_listItem_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_separator_width READ geometry_listItem_separator_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_slider_button_size READ geometry_listItem_slider_button_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_slider_spacing READ geometry_listItem_slider_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_slider_stepDivsion READ geometry_listItem_slider_stepDivsion NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_slider_width READ geometry_listItem_slider_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_textField_maximumWidth READ geometry_listItem_textField_maximumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_listItem_textField_minimumWidth READ geometry_listItem_textField_minimumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_loadMiniGauge_label_rightMargin READ geometry_loadMiniGauge_label_rightMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_mainGauge_size READ geometry_mainGauge_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_mainGauge_topMargin READ geometry_mainGauge_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_content_horizontalMargin READ geometry_modalDialog_content_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_content_margins READ geometry_modalDialog_content_margins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_content_spacing READ geometry_modalDialog_content_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_footer_height READ geometry_modalDialog_footer_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_footer_midSeparator_width READ geometry_modalDialog_footer_midSeparator_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_header_height READ geometry_modalDialog_header_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_height READ geometry_modalDialog_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_radius READ geometry_modalDialog_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalDialog_width READ geometry_modalDialog_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalWarningDialog_alarmIcon_topMargin READ geometry_modalWarningDialog_alarmIcon_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalWarningDialog_alarmIcon_width READ geometry_modalWarningDialog_alarmIcon_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalWarningDialog_description_horizontalMargin READ geometry_modalWarningDialog_description_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalWarningDialog_description_spacing READ geometry_modalWarningDialog_description_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalWarningDialog_title_horizontalMargin READ geometry_modalWarningDialog_title_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_modalWarningDialog_title_spacing READ geometry_modalWarningDialog_title_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_button_icon_height READ geometry_navigationBar_button_icon_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_button_icon_width READ geometry_navigationBar_button_icon_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_button_spacing READ geometry_navigationBar_button_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_button_width READ geometry_navigationBar_button_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_height READ geometry_navigationBar_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_initialize_margin READ geometry_navigationBar_initialize_margin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_notifications_redDot_horizontalCenterOffset READ geometry_navigationBar_notifications_redDot_horizontalCenterOffset NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_notifications_redDot_topMargin READ geometry_navigationBar_notifications_redDot_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_navigationBar_spacing READ geometry_navigationBar_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_checkmark_leftMargin READ geometry_notificationsPage_checkmark_leftMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_checkmark_spacing READ geometry_notificationsPage_checkmark_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_checkmark_topMargin READ geometry_notificationsPage_checkmark_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_description_spacing_horizontal READ geometry_notificationsPage_delegate_description_spacing_horizontal NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_description_spacing_vertical READ geometry_notificationsPage_delegate_description_spacing_vertical NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_height READ geometry_notificationsPage_delegate_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_icon_spacing READ geometry_notificationsPage_delegate_icon_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_marker_leftMargin READ geometry_notificationsPage_delegate_marker_leftMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_marker_radius READ geometry_notificationsPage_delegate_marker_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_marker_topMargin READ geometry_notificationsPage_delegate_marker_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_marker_width READ geometry_notificationsPage_delegate_marker_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_rightMargin READ geometry_notificationsPage_delegate_rightMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_topMargin READ geometry_notificationsPage_delegate_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_delegate_width READ geometry_notificationsPage_delegate_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_historyView_spacing READ geometry_notificationsPage_historyView_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_history_bottomPadding READ geometry_notificationsPage_history_bottomPadding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_history_spacing READ geometry_notificationsPage_history_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_history_topMargin READ geometry_notificationsPage_history_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_horizontalMargin READ geometry_notificationsPage_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_height READ geometry_notificationsPage_snoozeButton_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_image_leftMargin READ geometry_notificationsPage_snoozeButton_image_leftMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_radius READ geometry_notificationsPage_snoozeButton_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_rightMargin READ geometry_notificationsPage_snoozeButton_rightMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_spacing READ geometry_notificationsPage_snoozeButton_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_topMargin READ geometry_notificationsPage_snoozeButton_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_snoozeButton_width READ geometry_notificationsPage_snoozeButton_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_notificationsPage_topMargin READ geometry_notificationsPage_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_connector_anchor_height READ geometry_overviewPage_connector_anchor_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_connector_anchor_width READ geometry_overviewPage_connector_anchor_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_connector_animationPowerThreshold READ geometry_overviewPage_connector_animationPowerThreshold NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_connector_electron_interval READ geometry_overviewPage_connector_electron_interval NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_connector_electron_velocity READ geometry_overviewPage_connector_electron_velocity NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_connector_line_width READ geometry_overviewPage_connector_line_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_layout_compact_bottomMargin READ geometry_overviewPage_layout_compact_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_layout_compact_topMargin READ geometry_overviewPage_layout_compact_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_layout_expanded_bottomMargin READ geometry_overviewPage_layout_expanded_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_layout_expanded_topMargin READ geometry_overviewPage_layout_expanded_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_battery_background_radius READ geometry_overviewPage_widget_battery_background_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_battery_bottomRow_bottomMargin READ geometry_overviewPage_widget_battery_bottomRow_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_battery_bubble_width READ geometry_overviewPage_widget_battery_bubble_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_battery_temperature_rightMargin READ geometry_overviewPage_widget_battery_temperature_rightMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_battery_temperature_topMargin READ geometry_overviewPage_widget_battery_temperature_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_border_width READ geometry_overviewPage_widget_border_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_centerWidgetWidth READ geometry_overviewPage_widget_centerWidgetWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_compact_l_height READ geometry_overviewPage_widget_compact_l_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_compact_m_height READ geometry_overviewPage_widget_compact_m_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_compact_s_height READ geometry_overviewPage_widget_compact_s_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_compact_xl_height READ geometry_overviewPage_widget_compact_xl_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_compact_xs_height READ geometry_overviewPage_widget_compact_xs_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_content_horizontalMargin READ geometry_overviewPage_widget_content_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_content_verticalMargin READ geometry_overviewPage_widget_content_verticalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_expanded_l_height READ geometry_overviewPage_widget_expanded_l_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_expanded_m_height READ geometry_overviewPage_widget_expanded_m_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_expanded_s_height READ geometry_overviewPage_widget_expanded_s_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_expanded_xl_height READ geometry_overviewPage_widget_expanded_xl_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_expanded_xs_height READ geometry_overviewPage_widget_expanded_xs_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_extraContent_bottomMargin READ geometry_overviewPage_widget_extraContent_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_extraContent_topMargin READ geometry_overviewPage_widget_extraContent_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_header_spacing READ geometry_overviewPage_widget_header_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_leftWidgetWidth READ geometry_overviewPage_widget_leftWidgetWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_radius READ geometry_overviewPage_widget_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_rightWidgetWidth READ geometry_overviewPage_widget_rightWidgetWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_sideGauge_margins READ geometry_overviewPage_widget_sideGauge_margins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_sideGauge_radius READ geometry_overviewPage_widget_sideGauge_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_sideGauge_width READ geometry_overviewPage_widget_sideGauge_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_solar_graph_bar_radius READ geometry_overviewPage_widget_solar_graph_bar_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_solar_graph_bar_width READ geometry_overviewPage_widget_solar_graph_bar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_overviewPage_widget_solar_graph_margins READ geometry_overviewPage_widget_solar_graph_margins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_page_content_horizontalMargin READ geometry_page_content_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_page_content_verticalMargin READ geometry_page_content_verticalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_panel_radius READ geometry_panel_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_progressArc_strokeWidth READ geometry_progressArc_strokeWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_progressBar_height READ geometry_progressBar_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_progressBar_radius READ geometry_progressBar_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityLabel_bottomMargin READ geometry_quantityLabel_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityLabel_spacing READ geometry_quantityLabel_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityTableSummary_verticalMargin READ geometry_quantityTableSummary_verticalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityTableSummary_verticalSpacing READ geometry_quantityTableSummary_verticalSpacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityTable_bottomMargin READ geometry_quantityTable_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityTable_header_widthBoost READ geometry_quantityTable_header_widthBoost NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_quantityTable_row_height READ geometry_quantityTable_row_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_radioButton_border_width READ geometry_radioButton_border_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_radioButton_indicator_dot_width READ geometry_radioButton_indicator_dot_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_radioButton_indicator_width READ geometry_radioButton_indicator_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_screen_height READ geometry_screen_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_screen_width READ geometry_screen_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_scrollBar_bar_radius READ geometry_scrollBar_bar_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_scrollBar_bar_width READ geometry_scrollBar_bar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_scrollBar_horizontalMargin READ geometry_scrollBar_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_segmentedButtonRow_height READ geometry_segmentedButtonRow_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_separatorBar_width READ geometry_separatorBar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_battery_rangeSlider_labelWidth READ geometry_settings_battery_rangeSlider_labelWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_icon_container_height READ geometry_settings_gsmModem_icon_container_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_icon_container_width READ geometry_settings_gsmModem_icon_container_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_icon_height READ geometry_settings_gsmModem_icon_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_icon_statusText_topMargin READ geometry_settings_gsmModem_icon_statusText_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_signalStrengthBars_bar_incremental_height READ geometry_settings_gsmModem_signalStrengthBars_bar_incremental_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_signalStrengthBars_bar_width READ geometry_settings_gsmModem_signalStrengthBars_bar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_signalStrengthBars_spacing READ geometry_settings_gsmModem_signalStrengthBars_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_settings_gsmModem_signalStrengthBars_topMargin READ geometry_settings_gsmModem_signalStrengthBars_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_slider_groove_height READ geometry_slider_groove_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_slider_groove_radius READ geometry_slider_groove_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_bar_radius READ geometry_solarChart_bar_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_bar_spacing_fourteenDays READ geometry_solarChart_bar_spacing_fourteenDays NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_bar_spacing_sevenDays READ geometry_solarChart_bar_spacing_sevenDays NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_bar_spacing_thirtyDays READ geometry_solarChart_bar_spacing_thirtyDays NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_bottomMargin READ geometry_solarChart_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_horizontalMargin READ geometry_solarChart_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_tickLabel_width READ geometry_solarChart_tickLabel_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarChart_tickLine_height READ geometry_solarChart_tickLine_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_arrow_horizontalMargin READ geometry_solarDailyHistoryDialog_arrow_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_arrow_icon_size READ geometry_solarDailyHistoryDialog_arrow_icon_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_closeButton_icon_margins READ geometry_solarDailyHistoryDialog_closeButton_icon_margins NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_closeButton_icon_size READ geometry_solarDailyHistoryDialog_closeButton_icon_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_content_bottomMargin READ geometry_solarDailyHistoryDialog_content_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_content_horizontalMargin READ geometry_solarDailyHistoryDialog_content_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_header_height READ geometry_solarDailyHistoryDialog_header_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDailyHistoryDialog_minimumHeight READ geometry_solarDailyHistoryDialog_minimumHeight NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDetailBox_content_spacing READ geometry_solarDetailBox_content_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDetailBox_horizontalMargin READ geometry_solarDetailBox_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_solarDetailBox_leftColumn_proportionateWidth READ geometry_solarDetailBox_leftColumn_proportionateWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDetailBox_radius READ geometry_solarDetailBox_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarDetailBox_verticalMargin READ geometry_solarDetailBox_verticalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_alarmIcon_size READ geometry_solarHistoryErrorView_alarmIcon_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_expandIcon_horizontalMargin READ geometry_solarHistoryErrorView_expandIcon_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_expandIcon_size READ geometry_solarHistoryErrorView_expandIcon_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_iconBackground_width READ geometry_solarHistoryErrorView_iconBackground_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_itemHeight READ geometry_solarHistoryErrorView_itemHeight NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_radius READ geometry_solarHistoryErrorView_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_textBackground_bottomMargin READ geometry_solarHistoryErrorView_textBackground_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryErrorView_textBackground_horizontalMargin READ geometry_solarHistoryErrorView_textBackground_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarHistoryPage_tabBar_width READ geometry_solarHistoryPage_tabBar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_solarListPage_quantityRow_width READ geometry_solarListPage_quantityRow_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_spinBox_indicator_height READ geometry_spinBox_indicator_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_spinBox_indicator_maximumWidth READ geometry_spinBox_indicator_maximumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_spinBox_indicator_minimumWidth READ geometry_spinBox_indicator_minimumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_spinBox_indicator_radius READ geometry_spinBox_indicator_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_spinBox_spacing READ geometry_spinBox_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_gaugeAnimation_verticalCenterOffset READ geometry_splashView_gaugeAnimation_verticalCenterOffset NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_logo_horizontalCenterOffset READ geometry_splashView_logo_horizontalCenterOffset NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_logo_verticalCenterOffset READ geometry_splashView_logo_verticalCenterOffset NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_progressBar_bottomMargin READ geometry_splashView_progressBar_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_progressBar_width READ geometry_splashView_progressBar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_progressIconContainer_size READ geometry_splashView_progressIconContainer_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_progressText_spacing READ geometry_splashView_progressText_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_splashView_progressText_topMargin READ geometry_splashView_progressText_topMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_statusBar_button_height READ geometry_statusBar_button_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_statusBar_button_icon_height READ geometry_statusBar_button_icon_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_statusBar_button_icon_width READ geometry_statusBar_button_icon_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_statusBar_button_width READ geometry_statusBar_button_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_statusBar_height READ geometry_statusBar_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_statusBar_horizontalMargin READ geometry_statusBar_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_container_height READ geometry_switch_container_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_container_width READ geometry_switch_container_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_groove_border_width READ geometry_switch_groove_border_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_groove_height READ geometry_switch_groove_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_groove_width READ geometry_switch_groove_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_indicator_shadowOffset READ geometry_switch_indicator_shadowOffset NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_switch_indicator_width READ geometry_switch_indicator_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_tabBar_height READ geometry_tabBar_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_tabBar_width READ geometry_tabBar_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_tankShapeSelector_spinBox_height READ geometry_tankShapeSelector_spinBox_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_tankShapeSelector_spinBox_width READ geometry_tankShapeSelector_spinBox_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_textField_height READ geometry_textField_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_textField_horizontalMargin READ geometry_textField_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_timeSelector_spacing READ geometry_timeSelector_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_timeSelector_spinBox_height READ geometry_timeSelector_spinBox_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_timeSelector_spinBox_width READ geometry_timeSelector_spinBox_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_toastNotification_bottomMargin READ geometry_toastNotification_bottomMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_toastNotification_horizontalMargin READ geometry_toastNotification_horizontalMargin NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_toastNotification_icon_width READ geometry_toastNotification_icon_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_toastNotification_label_padding READ geometry_toastNotification_label_padding NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_toastNotification_minHeight READ geometry_toastNotification_minHeight NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_toastNotification_radius READ geometry_toastNotification_radius NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_veBusAlarm_minimumDelegateWidth READ geometry_veBusAlarm_minimumDelegateWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_veBusDeviceCard_modeButton_maximumWidth READ geometry_veBusDeviceCard_modeButton_maximumWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_veBusDevice_PVCFListQuantityGroup_minimumDelegateWidth READ geometry_veBusDevice_PVCFListQuantityGroup_minimumDelegateWidth NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_vebusDeviceListPage_currentLimit_button_width READ geometry_vebusDeviceListPage_currentLimit_button_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_vebusDeviceListPage_quantityTable_firstColumn_width READ geometry_vebusDeviceListPage_quantityTable_firstColumn_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_vebusDeviceListPage_quantityTable_header_height READ geometry_vebusDeviceListPage_quantityTable_header_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_vebusDeviceListPage_quantityTable_row_spacing READ geometry_vebusDeviceListPage_quantityTable_row_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_viewGradient_height READ geometry_viewGradient_height NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_viewGradient_position1 READ geometry_viewGradient_position1 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(qreal geometry_viewGradient_position2 READ geometry_viewGradient_position2 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_viewGradient_position3 READ geometry_viewGradient_position3 NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_weatherDetails_row_spacing READ geometry_weatherDetails_row_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_weatherDetails_width READ geometry_weatherDetails_width NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_widgetHeader_icon_size READ geometry_widgetHeader_icon_size NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(int geometry_widgetHeader_spacing READ geometry_widgetHeader_spacing NOTIFY screenSizeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_background_disabled READ color_background_disabled NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_background_primary READ color_background_primary NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_background_secondary READ color_background_secondary NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_black READ color_black NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_blackWater READ color_blackWater NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_blue READ color_blue NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_background READ color_briefPage_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_battery_unit_text_color READ color_briefPage_battery_unit_text_color NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_battery_value_text_color READ color_briefPage_battery_value_text_color NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_circularGauge_shine READ color_briefPage_circularGauge_shine NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_forecast_separator READ color_briefPage_sidePanel_forecast_separator NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_dotColor READ color_briefPage_sidePanel_loadGraph_dotColor NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_horizontalGradient_color READ color_briefPage_sidePanel_loadGraph_horizontalGradient_color NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_nominal_gradientColor1 READ color_briefPage_sidePanel_loadGraph_nominal_gradientColor1 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_nominal_gradientColor2 READ color_briefPage_sidePanel_loadGraph_nominal_gradientColor2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_nominal_strokeColor READ color_briefPage_sidePanel_loadGraph_nominal_strokeColor NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_warning_gradientColor1 READ color_briefPage_sidePanel_loadGraph_warning_gradientColor1 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_warning_gradientColor2 READ color_briefPage_sidePanel_loadGraph_warning_gradientColor2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_briefPage_sidePanel_loadGraph_warning_strokeColor READ color_briefPage_sidePanel_loadGraph_warning_strokeColor NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_button_down_text READ color_button_down_text NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_card_separator READ color_card_separator NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_critical READ color_critical NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkBlue READ color_darkBlue NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkCritical READ color_darkCritical NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkGray2 READ color_darkGray2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkGreen READ color_darkGreen NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkOk READ color_darkOk NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkOrange READ color_darkOrange NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkRed READ color_darkRed NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkWarning READ color_darkWarning NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_darkWhite READ color_darkWhite NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_diesel READ color_diesel NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_dimBlue READ color_dimBlue NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_dimGray2 READ color_dimGray2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_dimGreen READ color_dimGreen NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_dimRed READ color_dimRed NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_dimWhite READ color_dimWhite NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_font_disabled READ color_font_disabled NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_font_primary READ color_font_primary NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_font_secondary READ color_font_secondary NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_freshWater READ color_freshWater NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_fuel READ color_fuel NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gasoline READ color_gasoline NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray1 READ color_gray1 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray2 READ color_gray2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray3 READ color_gray3 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray4 READ color_gray4 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray5 READ color_gray5 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray6 READ color_gray6 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray7 READ color_gray7 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray8 READ color_gray8 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_gray9 READ color_gray9 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_green READ color_green NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_humidity1 READ color_humidity1 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_humidity2 READ color_humidity2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_humidity3 READ color_humidity3 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_hydraulicOil READ color_hydraulicOil NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_environment_gauge_tick READ color_levelsPage_environment_gauge_tick NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_environment_gauge_tickText READ color_levelsPage_environment_gauge_tickText NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_environment_panel_background READ color_levelsPage_environment_panel_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_environment_panel_border_color READ color_levelsPage_environment_panel_border_color NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_environment_panel_title READ color_levelsPage_environment_panel_title NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_environment_temperatureGauge_highlightValue READ color_levelsPage_environment_temperatureGauge_highlightValue NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_fallingGauge_alarmIcon READ color_levelsPage_fallingGauge_alarmIcon NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_gauge_backgroundColor READ color_levelsPage_gauge_backgroundColor NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_gauge_separatorBarColor READ color_levelsPage_gauge_separatorBarColor NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_risingGauge_alarmIcon READ color_levelsPage_risingGauge_alarmIcon NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_tankGroupData_background_color READ color_levelsPage_tankGroupData_background_color NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_levelsPage_tankIcon READ color_levelsPage_tankIcon NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_background READ color_listItem_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_down_background READ color_listItem_down_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_down_forwardIcon READ color_listItem_down_forwardIcon NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_forwardIcon READ color_listItem_forwardIcon NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_highAccessLevel READ color_listItem_highAccessLevel NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_secondaryText READ color_listItem_secondaryText NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_listItem_separator READ color_listItem_separator NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_liveWell READ color_liveWell NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_lng READ color_lng NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_lpg READ color_lpg NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_modalDialog_border READ color_modalDialog_border NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_navigationBar_button_off READ color_navigationBar_button_off NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_navigationBar_button_on READ color_navigationBar_button_on NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_notificationsPage_text_color READ color_notificationsPage_text_color NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_oil READ color_oil NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_ok READ color_ok NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_orange READ color_orange NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_background READ color_overviewPage_widget_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_battery_background READ color_overviewPage_widget_battery_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_battery_bubble_background READ color_overviewPage_widget_battery_bubble_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_battery_bubble_border READ color_overviewPage_widget_battery_bubble_border NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_border READ color_overviewPage_widget_border NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_sideGauge_background READ color_overviewPage_widget_sideGauge_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_sideGauge_highlight READ color_overviewPage_widget_sideGauge_highlight NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_overviewPage_widget_solar_graph_bar READ color_overviewPage_widget_solar_graph_bar NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_page_background READ color_page_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_quantityTable_quantityUnit READ color_quantityTable_quantityUnit NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_quantityTable_quantityValue READ color_quantityTable_quantityValue NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_quantityTable_row_alternateBackground READ color_quantityTable_row_alternateBackground NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_quantityTable_row_background READ color_quantityTable_row_background NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_radioButton_indicator_disabled READ color_radioButton_indicator_disabled NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_radioButton_indicator_off READ color_radioButton_indicator_off NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_radioButton_indicator_on READ color_radioButton_indicator_on NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_rawWater READ color_rawWater NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_red READ color_red NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_scrollBar_bar READ color_scrollBar_bar NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_settings_gsmModem_signalStrength_active READ color_settings_gsmModem_signalStrength_active NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_settings_gsmModem_signalStrength_inactive READ color_settings_gsmModem_signalStrength_inactive NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_solarDetailBox_border READ color_solarDetailBox_border NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_solarDetailBox_columnTitle READ color_solarDetailBox_columnTitle NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_solarDetailBox_quantityTitle READ color_solarDetailBox_quantityTitle NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_solarHistoryErrorView_primaryText READ color_solarHistoryErrorView_primaryText NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_solarHistoryErrorView_secondaryText READ color_solarHistoryErrorView_secondaryText NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_solarListPage_header_text READ color_solarListPage_header_text NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_splash_logo READ color_splash_logo NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_switch_groove_border_off READ color_switch_groove_border_off NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_switch_groove_border_on READ color_switch_groove_border_on NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_switch_groove_disabled READ color_switch_groove_disabled NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_switch_groove_off READ color_switch_groove_off NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_switch_groove_on READ color_switch_groove_on NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_temperature1 READ color_temperature1 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_temperature2 READ color_temperature2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_temperature3 READ color_temperature3 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_background_confirmation READ color_toastNotification_background_confirmation NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_background_error READ color_toastNotification_background_error NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_background_informative READ color_toastNotification_background_informative NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_background_none READ color_toastNotification_background_none NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_background_warning READ color_toastNotification_background_warning NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_foreground READ color_toastNotification_foreground NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_highlight_confirmation READ color_toastNotification_highlight_confirmation NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_highlight_error READ color_toastNotification_highlight_error NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_highlight_informative READ color_toastNotification_highlight_informative NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_toastNotification_highlight_warning READ color_toastNotification_highlight_warning NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_viewGradient_color1 READ color_viewGradient_color1 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_viewGradient_color2 READ color_viewGradient_color2 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_viewGradient_color3 READ color_viewGradient_color3 NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_warning READ color_warning NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_wasteWater READ color_wasteWater NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(QColor color_white READ color_white NOTIFY colorSchemeChanged_parameterless FINAL)
	Q_PROPERTY(int animation_acceptButtonBackground_expand_duration READ animation_acceptButtonBackground_expand_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_centerGauge_shine_duration READ animation_briefPage_centerGauge_shine_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_centerGauge_shine_pauseRatio READ animation_briefPage_centerGauge_shine_pauseRatio CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_edgeGauge_fade_duration READ animation_briefPage_edgeGauge_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_gaugeArc_initialize_duration READ animation_briefPage_gaugeArc_initialize_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_gaugeLabel_initialize_delayedStart_duration READ animation_briefPage_gaugeLabel_initialize_delayedStart_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_gaugeLabel_initialize_duration READ animation_briefPage_gaugeLabel_initialize_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_sidePanel_slide_duration READ animation_briefPage_sidePanel_slide_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_briefPage_sidePanel_sliderValueChange_duration READ animation_briefPage_sidePanel_sliderValueChange_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_generator_detectGeneratorNotSet_toastNotification_autoClose_duration READ animation_generator_detectGeneratorNotSet_toastNotification_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_generator_detectGeneratorSet_toastNotification_autoClose_duration READ animation_generator_detectGeneratorSet_toastNotification_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_generator_settings_valueOutOfRange_toastNotification_autoClose_duration READ animation_generator_settings_valueOutOfRange_toastNotification_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_generator_starting_toastNotification_autoClose_duration READ animation_generator_starting_toastNotification_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_generator_stopWhenAc1Available_toastNotification_autoClose_duration READ animation_generator_stopWhenAc1Available_toastNotification_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_generator_stopping_toastNotification_autoClose_duration READ animation_generator_stopping_toastNotification_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_inputPanel_slide_duration READ animation_inputPanel_slide_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_levelsPage_tanks_expandedView_fade_duration READ animation_levelsPage_tanks_expandedView_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_levelsPage_tanks_modelChangeResize_duration READ animation_levelsPage_tanks_modelChangeResize_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_loadGraph_minimumRange_watts READ animation_loadGraph_minimumRange_watts CONSTANT FINAL)
	Q_PROPERTY(int animation_loadGraph_model_length READ animation_loadGraph_model_length CONSTANT FINAL)
	Q_PROPERTY(int animation_navBar_initialize_delayedStart_duration READ animation_navBar_initialize_delayedStart_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_navBar_initialize_fade_duration READ animation_navBar_initialize_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_notificationsPage_delegate_displaced_duration READ animation_notificationsPage_delegate_displaced_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_notificationsPage_delegate_opacity_duration READ animation_notificationsPage_delegate_opacity_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_overviewPage_connector_fade_duration READ animation_overviewPage_connector_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_overviewPage_widget_battery_bubble_duration READ animation_overviewPage_widget_battery_bubble_duration CONSTANT FINAL)
	Q_PROPERTY(qreal animation_overviewPage_widget_battery_bubble_opacity READ animation_overviewPage_widget_battery_bubble_opacity CONSTANT FINAL)
	Q_PROPERTY(int animation_overviewPage_widget_battery_bubbles READ animation_overviewPage_widget_battery_bubbles CONSTANT FINAL)
	Q_PROPERTY(int animation_overviewPage_widget_battery_chimneys READ animation_overviewPage_widget_battery_chimneys CONSTANT FINAL)
	Q_PROPERTY(int animation_page_fade_duration READ animation_page_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_page_idleOpacity_duration READ animation_page_idleOpacity_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_page_idleResize_duration READ animation_page_idleResize_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_page_idleResize_timeout READ animation_page_idleResize_timeout CONSTANT FINAL)
	Q_PROPERTY(int animation_page_slide_duration READ animation_page_slide_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_progressArc_duration READ animation_progressArc_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_progressBar_duration READ animation_progressBar_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_settings_radioButtonPage_autoClose_duration READ animation_settings_radioButtonPage_autoClose_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_solarHistoryErrorView_expand_duration READ animation_solarHistoryErrorView_expand_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_splash_fade_duration READ animation_splash_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_splash_gaugeAnimation_fadeFrame READ animation_splash_gaugeAnimation_fadeFrame CONSTANT FINAL)
	Q_PROPERTY(int animation_splash_logoIcon_fade_duration READ animation_splash_logoIcon_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_splash_logoText_fade_duration READ animation_splash_logoText_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_splash_logo_preFadePause_duration READ animation_splash_logo_preFadePause_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_splash_progressBar_fade_duration READ animation_splash_progressBar_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_statusBar_initialize_delayedStart_duration READ animation_statusBar_initialize_delayedStart_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_statusBar_initialize_fade_duration READ animation_statusBar_initialize_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_toastNotification_fade_duration READ animation_toastNotification_fade_duration CONSTANT FINAL)
	Q_PROPERTY(int animation_veBusDeviceModeNotAdjustable_toastNotication_duration READ animation_veBusDeviceModeNotAdjustable_toastNotication_duration CONSTANT FINAL)

public:
	ThemeSingleton(QObject *parent = nullptr)
		: Theme(parent)
	{
		// size/color changed signal connections

	}

	// property accessors
	int font_briefPage_battery_percentage_pixelSize() const {
		return m_screenSize == Theme::FiveInch ? 68
			: 86;
	}

	int font_briefPage_battery_timeToGo_pixelSize() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 22;
	}

	int font_briefPage_battery_voltage_pixelSize() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 34;
	}

	int font_briefPage_quantityLabel_size() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 44;
	}

	int font_briefPage_sidePanel_forecastRow_today_date_size() const {
		return m_screenSize == Theme::FiveInch ? 22
			: 28;
	}

	int font_briefPage_sidePanel_forecastRow_today_temperature_size() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 44;
	}

	int font_overviewPage_battery_timeToGo_pixelSize() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 22;
	}

	int font_overviewPage_widget_quantityLabel_maximumSize() const {
		return m_screenSize == Theme::FiveInch ? 34
			: 44;
	}

	int font_overviewPage_widget_quantityLabel_minimumSize() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 44;
	}

	int font_size_body1() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 18;
	}

	int font_size_body2() const {
		return m_screenSize == Theme::FiveInch ? 22
			: 22;
	}

	int font_size_body3() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int font_size_caption() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int font_size_gsm_icon_caption() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int font_size_h1() const {
		return m_screenSize == Theme::FiveInch ? 34
			: 34;
	}

	int font_size_h2() const {
		return m_screenSize == Theme::FiveInch ? 44
			: 44;
	}

	int font_size_h3() const {
		return m_screenSize == Theme::FiveInch ? 56
			: 56;
	}

	int font_size_h4() const {
		return m_screenSize == Theme::FiveInch ? 68
			: 68;
	}

	int font_size_h5() const {
		return m_screenSize == Theme::FiveInch ? 86
			: 86;
	}

	int font_splashView_progressText_size() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 18;
	}

	int geometry_arc_strokeWidth() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_batteryListPage_item_height() const {
		return m_screenSize == Theme::FiveInch ? 84
			: 84;
	}

	int geometry_batteryListPage_item_verticalSpacing() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_briefPage_centerGauge_centerTextSpacing() const {
		return m_screenSize == Theme::FiveInch ? 5
			: 8;
	}

	int geometry_briefPage_centerGauge_centerText_horizontalSpacing() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_briefPage_centerGauge_centerText_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 74
			: 103;
	}

	int geometry_briefPage_centerGauge_centerText_topPadding() const {
		return m_screenSize == Theme::FiveInch ? 3
			: 3;
	}

	int geometry_briefPage_centerGauge_icon_height() const {
		return m_screenSize == Theme::FiveInch ? 22
			: 22;
	}

	int geometry_briefPage_centerGauge_maximumGaugeCount() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	qreal geometry_briefPage_centerGauge_shine_highlightPosition() const {
		return m_screenSize == Theme::FiveInch ? 0.8
			: 0.8;
	}

	qreal geometry_briefPage_centerGauge_shine_widthRatio() const {
		return m_screenSize == Theme::FiveInch ? 0.3
			: 0.3;
	}

	int geometry_briefPage_edgeGauge_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_briefPage_edgeGauge_initialize_margin() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_briefPage_edgeGauge_label_initialize_margin() const {
		return m_screenSize == Theme::FiveInch ? -10
			: -10;
	}

	int geometry_briefPage_edgeGauge_quantityLabel_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_briefPage_edgeGauge_radius() const {
		return m_screenSize == Theme::FiveInch ? 360
			: 456;
	}

	int geometry_briefPage_edgeGauge_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 44;
	}

	int geometry_briefPage_edgeGauge_width() const {
		return m_screenSize == Theme::FiveInch ? 60
			: 80;
	}

	int geometry_briefPage_largeEdgeGauge_height() const {
		return m_screenSize == Theme::FiveInch ? 320
			: 400;
	}

	int geometry_briefPage_largeEdgeGauge_maxAngle() const {
		return m_screenSize == Theme::FiveInch ? 51
			: 51;
	}

	int geometry_briefPage_lowerGauge_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 32;
	}

	int geometry_briefPage_sidePanel_columnSpacing() const {
		return m_screenSize == Theme::FiveInch ? 26
			: 34;
	}

	int geometry_briefPage_sidePanel_forecastRow_spacing() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 44;
	}

	int geometry_briefPage_sidePanel_generator_columnSpacing() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_briefPage_sidePanel_generator_slider_height() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_briefPage_sidePanel_header_spacing() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_briefPage_sidePanel_loadGraph_dotSize() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_briefPage_sidePanel_loadGraph_height() const {
		return m_screenSize == Theme::FiveInch ? 51
			: 51;
	}

	int geometry_briefPage_sidePanel_loadGraph_horizontalGradient_width() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_briefPage_sidePanel_loadGraph_intervalMs() const {
		return m_screenSize == Theme::FiveInch ? 1000
			: 1000;
	}

	qreal geometry_briefPage_sidePanel_loadGraph_warningThreshold() const {
		return m_screenSize == Theme::FiveInch ? 0.6
			: 0.6;
	}

	int geometry_briefPage_sidePanel_loadGraph_width() const {
		return m_screenSize == Theme::FiveInch ? 122
			: 144;
	}

	int geometry_briefPage_sidePanel_loads_columnSpacing() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_briefPage_sidePanel_separatorBar_height() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_briefPage_sidePanel_solarYield_width() const {
		return m_screenSize == Theme::FiveInch ? 120
			: 160;
	}

	int geometry_briefPage_sidePanel_verticalCenterOffset() const {
		return m_screenSize == Theme::FiveInch ? -8
			: -18;
	}

	int geometry_briefPage_sidePanel_width() const {
		return m_screenSize == Theme::FiveInch ? 240
			: 304;
	}

	int geometry_briefPage_smallEdgeGauge_height() const {
		return m_screenSize == Theme::FiveInch ? 154
			: 184;
	}

	int geometry_briefPage_smallEdgeGauge_maxAngle() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 22;
	}

	int geometry_briefPage_solarHistoryGauge_maximumGaugeCount() const {
		return m_screenSize == Theme::FiveInch ? 3
			: 3;
	}

	int geometry_button_border_width() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_button_radius() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_button_spacing() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_circularMultiGauge_icons_maxWidth() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 18;
	}

	int geometry_circularMultiGauge_labels_rightMargin() const {
		return m_screenSize == Theme::FiveInch ? 20
			: 20;
	}

	int geometry_circularMultiGauge_row_spacing() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_circularMultiGauge_spacing() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_circularMultiGauge_strokeWidth() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_circularSingularGauge_strokeWidth() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_comboBox_height() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_comboBox_indicator_height() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_comboBox_leftPadding() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 18;
	}

	int geometry_comboBox_rightPadding() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_comboBox_spacing() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_comboBox_verticalPadding() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_comboBox_width() const {
		return m_screenSize == Theme::FiveInch ? 172
			: 172;
	}

	int geometry_controlCard_button_margins() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_controlCard_contentMargins() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_controlCard_itemSeparator_margins() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_controlCard_largeItem_height() const {
		return m_screenSize == Theme::FiveInch ? 72
			: 72;
	}

	int geometry_controlCard_maximumWidth() const {
		return m_screenSize == Theme::FiveInch ? 368
			: 448;
	}

	int geometry_controlCard_mediumItem_height() const {
		return m_screenSize == Theme::FiveInch ? 56
			: 56;
	}

	int geometry_controlCard_minimumWidth() const {
		return m_screenSize == Theme::FiveInch ? 352
			: 428;
	}

	int geometry_controlCard_status_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_controlCard_status_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_controlCard_title_spacing() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 4;
	}

	int geometry_controlCard_title_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_controlCardsPage_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 24;
	}

	int geometry_controlCardsPage_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_controlCardsPage_spacing() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 18;
	}

	int geometry_generatorCard_startButton_height() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_generatorIconLabel_duration_width() const {
		return m_screenSize == Theme::FiveInch ? 60
			: 60;
	}

	int geometry_generatorIconLabel_icon_margin() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_generatorIconLabel_icon_width() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_gradientList_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_gradientList_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_gradientList_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_levelsPage_environment_gaugePanel_border_width() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_levelsPage_environment_gaugePanel_compact_height() const {
		return m_screenSize == Theme::FiveInch ? 296
			: 416;
	}

	int geometry_levelsPage_environment_gaugePanel_expanded_height() const {
		return m_screenSize == Theme::FiveInch ? 408
			: 512;
	}

	int geometry_levelsPage_environment_gaugePanel_innerRadius() const {
		return m_screenSize == Theme::FiveInch ? 14
			: 14;
	}

	int geometry_levelsPage_environment_gaugePanel_oneGauge_compact_width() const {
		return m_screenSize == Theme::FiveInch ? 112
			: 144;
	}

	int geometry_levelsPage_environment_gaugePanel_oneGauge_expanded_width() const {
		return m_screenSize == Theme::FiveInch ? 112
			: 144;
	}

	int geometry_levelsPage_environment_gaugePanel_radius() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_environment_gaugePanel_title_height() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_levelsPage_environment_gaugePanel_twoGauge_compact_width() const {
		return m_screenSize == Theme::FiveInch ? 176
			: 224;
	}

	int geometry_levelsPage_environment_gaugePanel_twoGauge_expanded_width() const {
		return m_screenSize == Theme::FiveInch ? 240
			: 280;
	}

	int geometry_levelsPage_environment_gauge_bar_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_environment_gauge_bar_padding() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_levelsPage_environment_gauge_bar_radius() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_environment_gauge_bar_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 9
			: 9;
	}

	int geometry_levelsPage_environment_gauge_bar_width() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_levelsPage_environment_gauge_icon_size() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_levelsPage_environment_gauge_icon_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_environment_gauge_quantityLabel_height() const {
		return m_screenSize == Theme::FiveInch ? 54
			: 54;
	}

	int geometry_levelsPage_environment_gauge_separator_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_levelsPage_environment_gauge_tick_margin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_levelsPage_environment_gauge_tick_size() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_levelsPage_environment_gauge_tick_step() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_levelsPage_environment_gauge_typeLabel_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_levelsPage_environment_gauge_valueMarker_background_height() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_levelsPage_environment_gauge_valueMarker_height() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_levelsPage_environment_gauge_valueMarker_width() const {
		return m_screenSize == Theme::FiveInch ? 14
			: 14;
	}

	int geometry_levelsPage_environment_gauge_width() const {
		return m_screenSize == Theme::FiveInch ? 104
			: 120;
	}

	qreal geometry_levelsPage_environment_humidityGauge_gradient_position1() const {
		return m_screenSize == Theme::FiveInch ? 0.16
			: 0.16;
	}

	qreal geometry_levelsPage_environment_humidityGauge_gradient_position2() const {
		return m_screenSize == Theme::FiveInch ? 0.49
			: 0.49;
	}

	qreal geometry_levelsPage_environment_humidityGauge_gradient_position3() const {
		return m_screenSize == Theme::FiveInch ? 0.9
			: 0.9;
	}

	int geometry_levelsPage_environment_humidityGauge_highlightedValue() const {
		return m_screenSize == Theme::FiveInch ? 50
			: 50;
	}

	int geometry_levelsPage_environment_humidityGauge_maximumValue() const {
		return m_screenSize == Theme::FiveInch ? 100
			: 100;
	}

	int geometry_levelsPage_environment_humidityGauge_minimumValue() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	int geometry_levelsPage_environment_maximumSpacing() const {
		return m_screenSize == Theme::FiveInch ? 144
			: 176;
	}

	int geometry_levelsPage_environment_minimumHorizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_levelsPage_environment_minimumSpacing() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_environment_temperatureGauge_gradient_position1() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	qreal geometry_levelsPage_environment_temperatureGauge_gradient_position2() const {
		return m_screenSize == Theme::FiveInch ? 0.47
			: 0.47;
	}

	int geometry_levelsPage_environment_temperatureGauge_gradient_position3() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_levelsPage_environment_temperatureGauge_highlightedValue() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	int geometry_levelsPage_environment_temperatureGauge_maximumValue() const {
		return m_screenSize == Theme::FiveInch ? 60
			: 60;
	}

	int geometry_levelsPage_environment_temperatureGauge_minimumValue() const {
		return m_screenSize == Theme::FiveInch ? -40
			: -40;
	}

	int geometry_levelsPage_gaugeDelegate_compact_height() const {
		return m_screenSize == Theme::FiveInch ? 296
			: 408;
	}

	int geometry_levelsPage_gaugeDelegate_contentWidth() const {
		return m_screenSize == Theme::FiveInch ? 112
			: 112;
	}

	int geometry_levelsPage_gaugeDelegate_expanded_height() const {
		return m_screenSize == Theme::FiveInch ? 408
			: 504;
	}

	int geometry_levelsPage_gaugeDelegate_width() const {
		return m_screenSize == Theme::FiveInch ? 128
			: 128;
	}

	int geometry_levelsPage_gauge_border_width() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_levelsPage_gauge_icon_height() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_levelsPage_gauge_icon_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 18;
	}

	int geometry_levelsPage_gauge_label_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_levelsPage_gauge_radius() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_gauge_spacing2() const {
		return m_screenSize == Theme::FiveInch ? 192
			: 192;
	}

	int geometry_levelsPage_gauge_spacing3() const {
		return m_screenSize == Theme::FiveInch ? 97
			: 192;
	}

	int geometry_levelsPage_gauge_spacing4() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 112;
	}

	int geometry_levelsPage_gauge_spacing5() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 72;
	}

	int geometry_levelsPage_gauge_spacing6() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 32;
	}

	int geometry_levelsPage_gauge_spacing7() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 8;
	}

	int geometry_levelsPage_gauge_valueText_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_levelsPage_gauge_valueText_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_levelsPage_gaugesView_compact_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_gaugesView_compact_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_gaugesView_expanded_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 40;
	}

	int geometry_levelsPage_gaugesView_expanded_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	int geometry_levelsPage_gaugesView_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 56;
	}

	int geometry_levelsPage_groupedSubgauges_delegate_height() const {
		return m_screenSize == Theme::FiveInch ? 384
			: 408;
	}

	int geometry_levelsPage_groupedSubgauges_delegate_width() const {
		return m_screenSize == Theme::FiveInch ? 96
			: 96;
	}

	int geometry_levelsPage_subgauge_width1() const {
		return m_screenSize == Theme::FiveInch ? 96
			: 96;
	}

	int geometry_levelsPage_subgauge_width2() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_levelsPage_subgauge_width3() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_levelsPage_subgauge_width4() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_subgauges_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_levelsPage_subgauges_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_subgauges_spacing() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_levelsPage_subgauges_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_levelsPage_tankGauge_alarmIcon_height() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_levelsPage_tankGauge_radius() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_levelsPage_tankGroupData_height() const {
		return m_screenSize == Theme::FiveInch ? 384
			: 408;
	}

	int geometry_levelsPage_tankGroupData_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 80
			: 80;
	}

	int geometry_levelsPage_tankGroupData_spacing2() const {
		return m_screenSize == Theme::FiveInch ? 96
			: 64;
	}

	int geometry_levelsPage_tankGroupData_spacing3() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_levelsPage_tankMergeThreshold() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 8;
	}

	int geometry_listItemButton_height() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_listItemButton_horizontalPadding() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_listItemButton_maximumWidth() const {
		return m_screenSize == Theme::FiveInch ? 180
			: 180;
	}

	int geometry_listItem_content_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_listItem_content_spacing() const {
		return m_screenSize == Theme::FiveInch ? 17
			: 17;
	}

	int geometry_listItem_content_verticalMargin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 20;
	}

	int geometry_listItem_height() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 64;
	}

	int geometry_listItem_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_listItem_separator_width() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_listItem_slider_button_size() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_listItem_slider_spacing() const {
		return m_screenSize == Theme::FiveInch ? 14
			: 14;
	}

	int geometry_listItem_slider_stepDivsion() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_listItem_slider_width() const {
		return m_screenSize == Theme::FiveInch ? 490
			: 630;
	}

	int geometry_listItem_textField_maximumWidth() const {
		return m_screenSize == Theme::FiveInch ? 376
			: 472;
	}

	int geometry_listItem_textField_minimumWidth() const {
		return m_screenSize == Theme::FiveInch ? 200
			: 236;
	}

	int geometry_loadMiniGauge_label_rightMargin() const {
		return m_screenSize == Theme::FiveInch ? 34
			: 34;
	}

	int geometry_mainGauge_size() const {
		return m_screenSize == Theme::FiveInch ? 320
			: 400;
	}

	int geometry_mainGauge_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 48;
	}

	int geometry_modalDialog_content_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 64;
	}

	int geometry_modalDialog_content_margins() const {
		return m_screenSize == Theme::FiveInch ? 20
			: 20;
	}

	int geometry_modalDialog_content_spacing() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_modalDialog_footer_height() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 64;
	}

	int geometry_modalDialog_footer_midSeparator_width() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_modalDialog_header_height() const {
		return m_screenSize == Theme::FiveInch ? 78
			: 78;
	}

	int geometry_modalDialog_height() const {
		return m_screenSize == Theme::FiveInch ? 368
			: 368;
	}

	int geometry_modalDialog_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_modalDialog_width() const {
		return m_screenSize == Theme::FiveInch ? 624
			: 624;
	}

	int geometry_modalWarningDialog_alarmIcon_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 44
			: 44;
	}

	int geometry_modalWarningDialog_alarmIcon_width() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_modalWarningDialog_description_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_modalWarningDialog_description_spacing() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_modalWarningDialog_title_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_modalWarningDialog_title_spacing() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_navigationBar_button_icon_height() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_navigationBar_button_icon_width() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_navigationBar_button_spacing() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_navigationBar_button_width() const {
		return m_screenSize == Theme::FiveInch ? 144
			: 176;
	}

	int geometry_navigationBar_height() const {
		return m_screenSize == Theme::FiveInch ? 72
			: 72;
	}

	int geometry_navigationBar_initialize_margin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_navigationBar_notifications_redDot_horizontalCenterOffset() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_navigationBar_notifications_redDot_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_navigationBar_spacing() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 16;
	}

	int geometry_notificationsPage_checkmark_leftMargin() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 56;
	}

	int geometry_notificationsPage_checkmark_spacing() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_notificationsPage_checkmark_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 80
			: 112;
	}

	int geometry_notificationsPage_delegate_description_spacing_horizontal() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_notificationsPage_delegate_description_spacing_vertical() const {
		return m_screenSize == Theme::FiveInch ? 3
			: 3;
	}

	int geometry_notificationsPage_delegate_height() const {
		return m_screenSize == Theme::FiveInch ? 80
			: 80;
	}

	int geometry_notificationsPage_delegate_icon_spacing() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_notificationsPage_delegate_marker_leftMargin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_notificationsPage_delegate_marker_radius() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_notificationsPage_delegate_marker_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_notificationsPage_delegate_marker_width() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_notificationsPage_delegate_rightMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_notificationsPage_delegate_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 15
			: 15;
	}

	int geometry_notificationsPage_delegate_width() const {
		return m_screenSize == Theme::FiveInch ? 752
			: 944;
	}

	int geometry_notificationsPage_historyView_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_notificationsPage_history_bottomPadding() const {
		return m_screenSize == Theme::FiveInch ? 3
			: 3;
	}

	int geometry_notificationsPage_history_spacing() const {
		return m_screenSize == Theme::FiveInch ? 3
			: 3;
	}

	int geometry_notificationsPage_history_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 31
			: 46;
	}

	int geometry_notificationsPage_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_notificationsPage_snoozeButton_height() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_notificationsPage_snoozeButton_image_leftMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_notificationsPage_snoozeButton_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_notificationsPage_snoozeButton_rightMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_notificationsPage_snoozeButton_spacing() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_notificationsPage_snoozeButton_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_notificationsPage_snoozeButton_width() const {
		return m_screenSize == Theme::FiveInch ? 160
			: 160;
	}

	int geometry_notificationsPage_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 56
			: 56;
	}

	int geometry_overviewPage_connector_anchor_height() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_overviewPage_connector_anchor_width() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_overviewPage_connector_animationPowerThreshold() const {
		return m_screenSize == Theme::FiveInch ? 30
			: 30;
	}

	int geometry_overviewPage_connector_electron_interval() const {
		return m_screenSize == Theme::FiveInch ? 34
			: 34;
	}

	int geometry_overviewPage_connector_electron_velocity() const {
		return m_screenSize == Theme::FiveInch ? 30
			: 30;
	}

	int geometry_overviewPage_connector_line_width() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_overviewPage_layout_compact_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_layout_compact_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	int geometry_overviewPage_layout_expanded_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_overviewPage_layout_expanded_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	int geometry_overviewPage_widget_battery_background_radius() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_overviewPage_widget_battery_bottomRow_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 9
			: 9;
	}

	int geometry_overviewPage_widget_battery_bubble_width() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 14;
	}

	int geometry_overviewPage_widget_battery_temperature_rightMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_overviewPage_widget_battery_temperature_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_overviewPage_widget_border_width() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_overviewPage_widget_centerWidgetWidth() const {
		return m_screenSize == Theme::FiveInch ? 240
			: 304;
	}

	int geometry_overviewPage_widget_compact_l_height() const {
		return m_screenSize == Theme::FiveInch ? 152
			: 192;
	}

	int geometry_overviewPage_widget_compact_m_height() const {
		return m_screenSize == Theme::FiveInch ? 88
			: 119;
	}

	int geometry_overviewPage_widget_compact_s_height() const {
		return m_screenSize == Theme::FiveInch ? 80
			: 106;
	}

	int geometry_overviewPage_widget_compact_xl_height() const {
		return m_screenSize == Theme::FiveInch ? 352
			: 472;
	}

	int geometry_overviewPage_widget_compact_xs_height() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 83;
	}

	int geometry_overviewPage_widget_content_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_overviewPage_widget_content_verticalMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_expanded_l_height() const {
		return m_screenSize == Theme::FiveInch ? 176
			: 221;
	}

	int geometry_overviewPage_widget_expanded_m_height() const {
		return m_screenSize == Theme::FiveInch ? 104
			: 131;
	}

	int geometry_overviewPage_widget_expanded_s_height() const {
		return m_screenSize == Theme::FiveInch ? 94
			: 118;
	}

	int geometry_overviewPage_widget_expanded_xl_height() const {
		return m_screenSize == Theme::FiveInch ? 400
			: 520;
	}

	int geometry_overviewPage_widget_expanded_xs_height() const {
		return m_screenSize == Theme::FiveInch ? 70
			: 88;
	}

	int geometry_overviewPage_widget_extraContent_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_overviewPage_widget_extraContent_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_overviewPage_widget_header_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_overviewPage_widget_leftWidgetWidth() const {
		return m_screenSize == Theme::FiveInch ? 176
			: 224;
	}

	int geometry_overviewPage_widget_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_rightWidgetWidth() const {
		return m_screenSize == Theme::FiveInch ? 176
			: 224;
	}

	int geometry_overviewPage_widget_sideGauge_margins() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_sideGauge_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_sideGauge_width() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_solar_graph_bar_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_solar_graph_bar_width() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_overviewPage_widget_solar_graph_margins() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_page_content_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_page_content_verticalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 40;
	}

	int geometry_panel_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_progressArc_strokeWidth() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_progressBar_height() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_progressBar_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_quantityLabel_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_quantityLabel_spacing() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_quantityTableSummary_verticalMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_quantityTableSummary_verticalSpacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_quantityTable_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 14
			: 14;
	}

	int geometry_quantityTable_header_widthBoost() const {
		return m_screenSize == Theme::FiveInch ? 90
			: 120;
	}

	int geometry_quantityTable_row_height() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_radioButton_border_width() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_radioButton_indicator_dot_width() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_radioButton_indicator_width() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_screen_height() const {
		return m_screenSize == Theme::FiveInch ? 480
			: 600;
	}

	int geometry_screen_width() const {
		return m_screenSize == Theme::FiveInch ? 800
			: 1024;
	}

	int geometry_scrollBar_bar_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_scrollBar_bar_width() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_scrollBar_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 16;
	}

	int geometry_segmentedButtonRow_height() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_separatorBar_width() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_settings_battery_rangeSlider_labelWidth() const {
		return m_screenSize == Theme::FiveInch ? 70
			: 120;
	}

	int geometry_settings_gsmModem_icon_container_height() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_settings_gsmModem_icon_container_width() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_settings_gsmModem_icon_height() const {
		return m_screenSize == Theme::FiveInch ? 26
			: 26;
	}

	int geometry_settings_gsmModem_icon_statusText_topMargin() const {
		return m_screenSize == Theme::FiveInch ? -2
			: -2;
	}

	int geometry_settings_gsmModem_signalStrengthBars_bar_incremental_height() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_settings_gsmModem_signalStrengthBars_bar_width() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_settings_gsmModem_signalStrengthBars_spacing() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_settings_gsmModem_signalStrengthBars_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_slider_groove_height() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_slider_groove_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_solarChart_bar_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_solarChart_bar_spacing_fourteenDays() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_solarChart_bar_spacing_sevenDays() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_solarChart_bar_spacing_thirtyDays() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_solarChart_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_solarChart_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 18;
	}

	int geometry_solarChart_tickLabel_width() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_solarChart_tickLine_height() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_solarDailyHistoryDialog_arrow_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 18;
	}

	int geometry_solarDailyHistoryDialog_arrow_icon_size() const {
		return m_screenSize == Theme::FiveInch ? 72
			: 72;
	}

	int geometry_solarDailyHistoryDialog_closeButton_icon_margins() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_solarDailyHistoryDialog_closeButton_icon_size() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_solarDailyHistoryDialog_content_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_solarDailyHistoryDialog_content_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_solarDailyHistoryDialog_header_height() const {
		return m_screenSize == Theme::FiveInch ? 50
			: 50;
	}

	int geometry_solarDailyHistoryDialog_minimumHeight() const {
		return m_screenSize == Theme::FiveInch ? 216
			: 222;
	}

	int geometry_solarDetailBox_content_spacing() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_solarDetailBox_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	qreal geometry_solarDetailBox_leftColumn_proportionateWidth() const {
		return m_screenSize == Theme::FiveInch ? 0.55
			: 0.55;
	}

	int geometry_solarDetailBox_radius() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_solarDetailBox_verticalMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_solarHistoryErrorView_alarmIcon_size() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 18;
	}

	int geometry_solarHistoryErrorView_expandIcon_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_solarHistoryErrorView_expandIcon_size() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_solarHistoryErrorView_iconBackground_width() const {
		return m_screenSize == Theme::FiveInch ? 56
			: 56;
	}

	int geometry_solarHistoryErrorView_itemHeight() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_solarHistoryErrorView_radius() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_solarHistoryErrorView_textBackground_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 10
			: 10;
	}

	int geometry_solarHistoryErrorView_textBackground_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_solarHistoryPage_tabBar_width() const {
		return m_screenSize == Theme::FiveInch ? 260
			: 260;
	}

	int geometry_solarListPage_quantityRow_width() const {
		return m_screenSize == Theme::FiveInch ? 440
			: 480;
	}

	int geometry_spinBox_indicator_height() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 64;
	}

	int geometry_spinBox_indicator_maximumWidth() const {
		return m_screenSize == Theme::FiveInch ? 136
			: 136;
	}

	int geometry_spinBox_indicator_minimumWidth() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 64;
	}

	int geometry_spinBox_indicator_radius() const {
		return m_screenSize == Theme::FiveInch ? 6
			: 6;
	}

	int geometry_spinBox_spacing() const {
		return m_screenSize == Theme::FiveInch ? 7
			: 7;
	}

	int geometry_splashView_gaugeAnimation_verticalCenterOffset() const {
		return m_screenSize == Theme::FiveInch ? -8
			: 0;
	}

	int geometry_splashView_logo_horizontalCenterOffset() const {
		return m_screenSize == Theme::FiveInch ? -1
			: -2;
	}

	int geometry_splashView_logo_verticalCenterOffset() const {
		return m_screenSize == Theme::FiveInch ? -13
			: -25;
	}

	int geometry_splashView_progressBar_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 178
			: 244;
	}

	int geometry_splashView_progressBar_width() const {
		return m_screenSize == Theme::FiveInch ? 368
			: 464;
	}

	int geometry_splashView_progressIconContainer_size() const {
		return m_screenSize == Theme::FiveInch ? 46
			: 46;
	}

	int geometry_splashView_progressText_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_splashView_progressText_topMargin() const {
		return m_screenSize == Theme::FiveInch ? 12
			: 12;
	}

	int geometry_statusBar_button_height() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_statusBar_button_icon_height() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_statusBar_button_icon_width() const {
		return m_screenSize == Theme::FiveInch ? 32
			: 32;
	}

	int geometry_statusBar_button_width() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_statusBar_height() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_statusBar_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 18
			: 32;
	}

	int geometry_switch_container_height() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_switch_container_width() const {
		return m_screenSize == Theme::FiveInch ? 48
			: 48;
	}

	int geometry_switch_groove_border_width() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_switch_groove_height() const {
		return m_screenSize == Theme::FiveInch ? 20
			: 20;
	}

	int geometry_switch_groove_width() const {
		return m_screenSize == Theme::FiveInch ? 44
			: 44;
	}

	int geometry_switch_indicator_shadowOffset() const {
		return m_screenSize == Theme::FiveInch ? 2
			: 2;
	}

	int geometry_switch_indicator_width() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_tabBar_height() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_tabBar_width() const {
		return m_screenSize == Theme::FiveInch ? 368
			: 464;
	}

	int geometry_tankShapeSelector_spinBox_height() const {
		return m_screenSize == Theme::FiveInch ? 72
			: 72;
	}

	int geometry_tankShapeSelector_spinBox_width() const {
		return m_screenSize == Theme::FiveInch ? 262
			: 262;
	}

	int geometry_textField_height() const {
		return m_screenSize == Theme::FiveInch ? 40
			: 40;
	}

	int geometry_textField_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_timeSelector_spacing() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_timeSelector_spinBox_height() const {
		return m_screenSize == Theme::FiveInch ? 72
			: 72;
	}

	int geometry_timeSelector_spinBox_width() const {
		return m_screenSize == Theme::FiveInch ? 238
			: 238;
	}

	int geometry_toastNotification_bottomMargin() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_toastNotification_horizontalMargin() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_toastNotification_icon_width() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_toastNotification_label_padding() const {
		return m_screenSize == Theme::FiveInch ? 16
			: 16;
	}

	int geometry_toastNotification_minHeight() const {
		return m_screenSize == Theme::FiveInch ? 64
			: 64;
	}

	int geometry_toastNotification_radius() const {
		return m_screenSize == Theme::FiveInch ? 8
			: 8;
	}

	int geometry_veBusAlarm_minimumDelegateWidth() const {
		return m_screenSize == Theme::FiveInch ? 120
			: 120;
	}

	int geometry_veBusDeviceCard_modeButton_maximumWidth() const {
		return m_screenSize == Theme::FiveInch ? 180
			: 180;
	}

	int geometry_veBusDevice_PVCFListQuantityGroup_minimumDelegateWidth() const {
		return m_screenSize == Theme::FiveInch ? 100
			: 100;
	}

	int geometry_vebusDeviceListPage_currentLimit_button_width() const {
		return m_screenSize == Theme::FiveInch ? 180
			: 180;
	}

	int geometry_vebusDeviceListPage_quantityTable_firstColumn_width() const {
		return m_screenSize == Theme::FiveInch ? 39
			: 39;
	}

	int geometry_vebusDeviceListPage_quantityTable_header_height() const {
		return m_screenSize == Theme::FiveInch ? 58
			: 58;
	}

	int geometry_vebusDeviceListPage_quantityTable_row_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	int geometry_viewGradient_height() const {
		return m_screenSize == Theme::FiveInch ? 28
			: 28;
	}

	int geometry_viewGradient_position1() const {
		return m_screenSize == Theme::FiveInch ? 0
			: 0;
	}

	qreal geometry_viewGradient_position2() const {
		return m_screenSize == Theme::FiveInch ? 0.55
			: 0.55;
	}

	int geometry_viewGradient_position3() const {
		return m_screenSize == Theme::FiveInch ? 1
			: 1;
	}

	int geometry_weatherDetails_row_spacing() const {
		return m_screenSize == Theme::FiveInch ? 3
			: 3;
	}

	int geometry_weatherDetails_width() const {
		return m_screenSize == Theme::FiveInch ? 72
			: 72;
	}

	int geometry_widgetHeader_icon_size() const {
		return m_screenSize == Theme::FiveInch ? 24
			: 24;
	}

	int geometry_widgetHeader_spacing() const {
		return m_screenSize == Theme::FiveInch ? 4
			: 4;
	}

	QColor color_background_disabled() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(220, 219, 215, 255);
	}

	QColor color_background_primary() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_background_secondary() const {
		return m_colorScheme == Theme::Dark ? QColor(20, 20, 20, 255)
			: QColor(250, 249, 245, 255);
	}

	QColor color_black() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 255)
			: QColor(0, 0, 0, 255);
	}

	QColor color_blackWater() const {
		return m_colorScheme == Theme::Dark ? QColor(107, 74, 179, 255)
			: QColor(107, 74, 179, 255);
	}

	QColor color_blue() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_briefPage_background() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 255)
			: QColor(250, 249, 245, 255);
	}

	QColor color_briefPage_battery_unit_text_color() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_briefPage_battery_value_text_color() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(39, 38, 34, 255);
	}

	QColor color_briefPage_circularGauge_shine() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 187)
			: QColor(255, 255, 255, 187);
	}

	QColor color_briefPage_sidePanel_forecast_separator() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 77)
			: QColor(39, 38, 34, 77);
	}

	QColor color_briefPage_sidePanel_loadGraph_dotColor() const {
		return m_colorScheme == Theme::Dark ? QColor(80, 79, 75, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_briefPage_sidePanel_loadGraph_horizontalGradient_color() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 0)
			: QColor(0, 0, 0, 0);
	}

	QColor color_briefPage_sidePanel_loadGraph_nominal_gradientColor1() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_briefPage_sidePanel_loadGraph_nominal_gradientColor2() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 0)
			: QColor(0, 0, 0, 0);
	}

	QColor color_briefPage_sidePanel_loadGraph_nominal_strokeColor() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_briefPage_sidePanel_loadGraph_warning_gradientColor1() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 149, 46, 255)
			: QColor(240, 149, 46, 255);
	}

	QColor color_briefPage_sidePanel_loadGraph_warning_gradientColor2() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 0)
			: QColor(0, 0, 0, 0);
	}

	QColor color_briefPage_sidePanel_loadGraph_warning_strokeColor() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 255)
			: QColor(240, 150, 46, 255);
	}

	QColor color_button_down_text() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_card_separator() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(220, 219, 215, 255);
	}

	QColor color_critical() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 255)
			: QColor(243, 92, 88, 255);
	}

	QColor color_darkBlue() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 77)
			: QColor(56, 125, 197, 77);
	}

	QColor color_darkCritical() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 77)
			: QColor(243, 92, 88, 77);
	}

	QColor color_darkGray2() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 77)
			: QColor(39, 38, 34, 77);
	}

	QColor color_darkGreen() const {
		return m_colorScheme == Theme::Dark ? QColor(114, 184, 76, 77)
			: QColor(114, 184, 76, 77);
	}

	QColor color_darkOk() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 77)
			: QColor(56, 125, 197, 77);
	}

	QColor color_darkOrange() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 77)
			: QColor(240, 150, 46, 77);
	}

	QColor color_darkRed() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 77)
			: QColor(243, 92, 88, 77);
	}

	QColor color_darkWarning() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 77)
			: QColor(240, 150, 46, 77);
	}

	QColor color_darkWhite() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 77)
			: QColor(255, 255, 255, 77);
	}

	QColor color_diesel() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 254, 118, 255)
			: QColor(255, 254, 118, 255);
	}

	QColor color_dimBlue() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 179)
			: QColor(56, 125, 197, 179);
	}

	QColor color_dimGray2() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 153)
			: QColor(39, 38, 34, 153);
	}

	QColor color_dimGreen() const {
		return m_colorScheme == Theme::Dark ? QColor(114, 184, 76, 179)
			: QColor(114, 184, 76, 179);
	}

	QColor color_dimRed() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 179)
			: QColor(243, 92, 88, 179);
	}

	QColor color_dimWhite() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 153)
			: QColor(255, 255, 255, 153);
	}

	QColor color_font_disabled() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_font_primary() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(39, 38, 34, 255);
	}

	QColor color_font_secondary() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 153)
			: QColor(39, 38, 34, 153);
	}

	QColor color_freshWater() const {
		return m_colorScheme == Theme::Dark ? QColor(132, 203, 248, 255)
			: QColor(132, 203, 248, 255);
	}

	QColor color_fuel() const {
		return m_colorScheme == Theme::Dark ? QColor(118, 131, 44, 255)
			: QColor(118, 131, 44, 255);
	}

	QColor color_gasoline() const {
		return m_colorScheme == Theme::Dark ? QColor(223, 188, 62, 255)
			: QColor(223, 188, 62, 255);
	}

	QColor color_gray1() const {
		return m_colorScheme == Theme::Dark ? QColor(20, 20, 20, 255)
			: QColor(20, 20, 20, 255);
	}

	QColor color_gray2() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(39, 38, 34, 255);
	}

	QColor color_gray3() const {
		return m_colorScheme == Theme::Dark ? QColor(80, 79, 75, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_gray4() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_gray5() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_gray6() const {
		return m_colorScheme == Theme::Dark ? QColor(220, 219, 215, 255)
			: QColor(220, 219, 215, 255);
	}

	QColor color_gray7() const {
		return m_colorScheme == Theme::Dark ? QColor(230, 229, 225, 255)
			: QColor(230, 229, 225, 255);
	}

	QColor color_gray8() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 239, 235, 255)
			: QColor(240, 239, 235, 255);
	}

	QColor color_gray9() const {
		return m_colorScheme == Theme::Dark ? QColor(250, 249, 245, 255)
			: QColor(250, 249, 245, 255);
	}

	QColor color_green() const {
		return m_colorScheme == Theme::Dark ? QColor(114, 184, 76, 255)
			: QColor(114, 184, 76, 255);
	}

	QColor color_humidity1() const {
		return m_colorScheme == Theme::Dark ? QColor(28, 63, 98, 255)
			: QColor(93, 154, 215, 255);
	}

	QColor color_humidity2() const {
		return m_colorScheme == Theme::Dark ? QColor(64, 90, 37, 255)
			: QColor(151, 185, 116, 255);
	}

	QColor color_humidity3() const {
		return m_colorScheme == Theme::Dark ? QColor(120, 75, 23, 255)
			: QColor(219, 183, 142, 255);
	}

	QColor color_hydraulicOil() const {
		return m_colorScheme == Theme::Dark ? QColor(181, 104, 71, 255)
			: QColor(181, 104, 71, 255);
	}

	QColor color_levelsPage_environment_gauge_tick() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_levelsPage_environment_gauge_tickText() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_levelsPage_environment_panel_background() const {
		return m_colorScheme == Theme::Dark ? QColor(20, 20, 20, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_levelsPage_environment_panel_border_color() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_levelsPage_environment_panel_title() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_levelsPage_environment_temperatureGauge_highlightValue() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_levelsPage_fallingGauge_alarmIcon() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 255)
			: QColor(243, 92, 88, 255);
	}

	QColor color_levelsPage_gauge_backgroundColor() const {
		return m_colorScheme == Theme::Dark ? QColor(20, 20, 20, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_levelsPage_gauge_separatorBarColor() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 255)
			: QColor(250, 249, 245, 255);
	}

	QColor color_levelsPage_risingGauge_alarmIcon() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_levelsPage_tankGroupData_background_color() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 178)
			: QColor(0, 0, 0, 178);
	}

	QColor color_levelsPage_tankIcon() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(39, 38, 34, 255);
	}

	QColor color_listItem_background() const {
		return m_colorScheme == Theme::Dark ? QColor(20, 20, 20, 255)
			: QColor(250, 249, 245, 255);
	}

	QColor color_listItem_down_background() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(240, 239, 235, 255);
	}

	QColor color_listItem_down_forwardIcon() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_listItem_forwardIcon() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_listItem_highAccessLevel() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 77)
			: QColor(240, 150, 46, 102);
	}

	QColor color_listItem_secondaryText() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_listItem_separator() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_liveWell() const {
		return m_colorScheme == Theme::Dark ? QColor(36, 153, 137, 255)
			: QColor(36, 153, 137, 255);
	}

	QColor color_lng() const {
		return m_colorScheme == Theme::Dark ? QColor(145, 154, 231, 255)
			: QColor(145, 154, 231, 255);
	}

	QColor color_lpg() const {
		return m_colorScheme == Theme::Dark ? QColor(185, 140, 221, 255)
			: QColor(185, 140, 221, 255);
	}

	QColor color_modalDialog_border() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(39, 38, 34, 255);
	}

	QColor color_navigationBar_button_off() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_navigationBar_button_on() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_notificationsPage_text_color() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 153)
			: QColor(100, 99, 95, 255);
	}

	QColor color_oil() const {
		return m_colorScheme == Theme::Dark ? QColor(133, 107, 93, 255)
			: QColor(133, 107, 93, 255);
	}

	QColor color_ok() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_orange() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 255)
			: QColor(240, 150, 46, 255);
	}

	QColor color_overviewPage_widget_background() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 77)
			: QColor(255, 255, 255, 255);
	}

	QColor color_overviewPage_widget_battery_background() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_overviewPage_widget_battery_bubble_background() const {
		return m_colorScheme == Theme::Dark ? QColor(115, 148, 189, 255)
			: QColor(115, 148, 189, 255);
	}

	QColor color_overviewPage_widget_battery_bubble_border() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_overviewPage_widget_border() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_overviewPage_widget_sideGauge_background() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 77)
			: QColor(56, 125, 197, 77);
	}

	QColor color_overviewPage_widget_sideGauge_highlight() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_overviewPage_widget_solar_graph_bar() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_page_background() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 255)
			: QColor(230, 229, 225, 255);
	}

	QColor color_quantityTable_quantityUnit() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_quantityTable_quantityValue() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_quantityTable_row_alternateBackground() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(230, 229, 225, 255);
	}

	QColor color_quantityTable_row_background() const {
		return m_colorScheme == Theme::Dark ? QColor(20, 20, 20, 255)
			: QColor(250, 249, 245, 255);
	}

	QColor color_radioButton_indicator_disabled() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(220, 219, 215, 255);
	}

	QColor color_radioButton_indicator_off() const {
		return m_colorScheme == Theme::Dark ? QColor(80, 79, 75, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_radioButton_indicator_on() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_rawWater() const {
		return m_colorScheme == Theme::Dark ? QColor(75, 147, 178, 255)
			: QColor(75, 147, 178, 255);
	}

	QColor color_red() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 255)
			: QColor(243, 92, 88, 255);
	}

	QColor color_scrollBar_bar() const {
		return m_colorScheme == Theme::Dark ? QColor(39, 38, 34, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_settings_gsmModem_signalStrength_active() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(39, 38, 34, 255);
	}

	QColor color_settings_gsmModem_signalStrength_inactive() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 77)
			: QColor(39, 38, 34, 77);
	}

	QColor color_solarDetailBox_border() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_solarDetailBox_columnTitle() const {
		return m_colorScheme == Theme::Dark ? QColor(220, 219, 215, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_solarDetailBox_quantityTitle() const {
		return m_colorScheme == Theme::Dark ? QColor(150, 149, 145, 255)
			: QColor(100, 99, 95, 255);
	}

	QColor color_solarHistoryErrorView_primaryText() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_solarHistoryErrorView_secondaryText() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 153)
			: QColor(255, 255, 255, 153);
	}

	QColor color_solarListPage_header_text() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_splash_logo() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_switch_groove_border_off() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_switch_groove_border_on() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 0)
			: QColor(0, 0, 0, 0);
	}

	QColor color_switch_groove_disabled() const {
		return m_colorScheme == Theme::Dark ? QColor(100, 99, 95, 255)
			: QColor(150, 149, 145, 255);
	}

	QColor color_switch_groove_off() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 0)
			: QColor(0, 0, 0, 0);
	}

	QColor color_switch_groove_on() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_temperature1() const {
		return m_colorScheme == Theme::Dark ? QColor(117, 46, 44, 255)
			: QColor(214, 106, 103, 255);
	}

	QColor color_temperature2() const {
		return m_colorScheme == Theme::Dark ? QColor(45, 38, 71, 255)
			: QColor(126, 110, 183, 255);
	}

	QColor color_temperature3() const {
		return m_colorScheme == Theme::Dark ? QColor(29, 61, 96, 255)
			: QColor(89, 145, 206, 255);
	}

	QColor color_toastNotification_background_confirmation() const {
		return m_colorScheme == Theme::Dark ? QColor(92, 156, 57, 255)
			: QColor(92, 156, 57, 255);
	}

	QColor color_toastNotification_background_error() const {
		return m_colorScheme == Theme::Dark ? QColor(191, 72, 69, 255)
			: QColor(191, 72, 69, 255);
	}

	QColor color_toastNotification_background_informative() const {
		return m_colorScheme == Theme::Dark ? QColor(41, 92, 145, 255)
			: QColor(41, 92, 145, 255);
	}

	QColor color_toastNotification_background_none() const {
		return m_colorScheme == Theme::Dark ? QColor(80, 79, 75, 255)
			: QColor(80, 79, 75, 255);
	}

	QColor color_toastNotification_background_warning() const {
		return m_colorScheme == Theme::Dark ? QColor(189, 118, 36, 255)
			: QColor(189, 118, 36, 255);
	}

	QColor color_toastNotification_foreground() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	QColor color_toastNotification_highlight_confirmation() const {
		return m_colorScheme == Theme::Dark ? QColor(114, 184, 76, 255)
			: QColor(114, 184, 76, 255);
	}

	QColor color_toastNotification_highlight_error() const {
		return m_colorScheme == Theme::Dark ? QColor(243, 92, 88, 255)
			: QColor(243, 92, 88, 255);
	}

	QColor color_toastNotification_highlight_informative() const {
		return m_colorScheme == Theme::Dark ? QColor(56, 125, 197, 255)
			: QColor(56, 125, 197, 255);
	}

	QColor color_toastNotification_highlight_warning() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 255)
			: QColor(240, 150, 46, 255);
	}

	QColor color_viewGradient_color1() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 0)
			: QColor(0, 0, 0, 0);
	}

	QColor color_viewGradient_color2() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 102)
			: QColor(230, 229, 225, 102);
	}

	QColor color_viewGradient_color3() const {
		return m_colorScheme == Theme::Dark ? QColor(0, 0, 0, 255)
			: QColor(230, 229, 225, 255);
	}

	QColor color_warning() const {
		return m_colorScheme == Theme::Dark ? QColor(240, 150, 46, 255)
			: QColor(240, 150, 46, 255);
	}

	QColor color_wasteWater() const {
		return m_colorScheme == Theme::Dark ? QColor(48, 185, 211, 255)
			: QColor(48, 185, 211, 255);
	}

	QColor color_white() const {
		return m_colorScheme == Theme::Dark ? QColor(255, 255, 255, 255)
			: QColor(255, 255, 255, 255);
	}

	int animation_acceptButtonBackground_expand_duration() const {
		return 1200;
	}

	int animation_briefPage_centerGauge_shine_duration() const {
		return 1500;
	}

	int animation_briefPage_centerGauge_shine_pauseRatio() const {
		return 2;
	}

	int animation_briefPage_edgeGauge_fade_duration() const {
		return 200;
	}

	int animation_briefPage_gaugeArc_initialize_duration() const {
		return 300;
	}

	int animation_briefPage_gaugeLabel_initialize_delayedStart_duration() const {
		return 100;
	}

	int animation_briefPage_gaugeLabel_initialize_duration() const {
		return 400;
	}

	int animation_briefPage_sidePanel_slide_duration() const {
		return 350;
	}

	int animation_briefPage_sidePanel_sliderValueChange_duration() const {
		return 200;
	}

	int animation_generator_detectGeneratorNotSet_toastNotification_autoClose_duration() const {
		return 10000;
	}

	int animation_generator_detectGeneratorSet_toastNotification_autoClose_duration() const {
		return 12000;
	}

	int animation_generator_settings_valueOutOfRange_toastNotification_autoClose_duration() const {
		return 3000;
	}

	int animation_generator_starting_toastNotification_autoClose_duration() const {
		return 5000;
	}

	int animation_generator_stopWhenAc1Available_toastNotification_autoClose_duration() const {
		return 10000;
	}

	int animation_generator_stopping_toastNotification_autoClose_duration() const {
		return 3000;
	}

	int animation_inputPanel_slide_duration() const {
		return 250;
	}

	int animation_levelsPage_tanks_expandedView_fade_duration() const {
		return 500;
	}

	int animation_levelsPage_tanks_modelChangeResize_duration() const {
		return 500;
	}

	int animation_loadGraph_minimumRange_watts() const {
		return 1000;
	}

	int animation_loadGraph_model_length() const {
		return 12;
	}

	int animation_navBar_initialize_delayedStart_duration() const {
		return 350;
	}

	int animation_navBar_initialize_fade_duration() const {
		return 400;
	}

	int animation_notificationsPage_delegate_displaced_duration() const {
		return 400;
	}

	int animation_notificationsPage_delegate_opacity_duration() const {
		return 400;
	}

	int animation_overviewPage_connector_fade_duration() const {
		return 100;
	}

	int animation_overviewPage_widget_battery_bubble_duration() const {
		return 2000;
	}

	qreal animation_overviewPage_widget_battery_bubble_opacity() const {
		return 0.6;
	}

	int animation_overviewPage_widget_battery_bubbles() const {
		return 6;
	}

	int animation_overviewPage_widget_battery_chimneys() const {
		return 5;
	}

	int animation_page_fade_duration() const {
		return 250;
	}

	int animation_page_idleOpacity_duration() const {
		return 250;
	}

	int animation_page_idleResize_duration() const {
		return 250;
	}

	int animation_page_idleResize_timeout() const {
		return 6000;
	}

	int animation_page_slide_duration() const {
		return 250;
	}

	int animation_progressArc_duration() const {
		return 600;
	}

	int animation_progressBar_duration() const {
		return 1000;
	}

	int animation_settings_radioButtonPage_autoClose_duration() const {
		return 600;
	}

	int animation_solarHistoryErrorView_expand_duration() const {
		return 100;
	}

	int animation_splash_fade_duration() const {
		return 400;
	}

	int animation_splash_gaugeAnimation_fadeFrame() const {
		return 74;
	}

	int animation_splash_logoIcon_fade_duration() const {
		return 200;
	}

	int animation_splash_logoText_fade_duration() const {
		return 400;
	}

	int animation_splash_logo_preFadePause_duration() const {
		return 400;
	}

	int animation_splash_progressBar_fade_duration() const {
		return 350;
	}

	int animation_statusBar_initialize_delayedStart_duration() const {
		return 350;
	}

	int animation_statusBar_initialize_fade_duration() const {
		return 400;
	}

	int animation_toastNotification_fade_duration() const {
		return 250;
	}

	int animation_veBusDeviceModeNotAdjustable_toastNotication_duration() const {
		return 5000;
	}


	// statusColorValue method implementation
	Q_INVOKABLE QColor statusColorValue(StatusLevel level, bool darkColor = false) const
	{
		const QVariant c = (level == Ok && darkColor) ? color_darkOk()
			: (level == Ok) ? color_ok()
			: (level == Warning && darkColor) ? color_darkWarning()
			: (level == Warning) ? color_warning()
			: (level == Critical && darkColor) ? color_darkCritical()
			: color_critical();
		return c.typeId() == QMetaType::QColor ? c.value<QColor>() : QColor(c.value<QString>());
	}


private:
	// sub-objects

};


} // namespace VenusOS
} // namespace Victron

#endif // VICTRON_VENUSOS_GUI_V2_THEMEOBJECTS_H

